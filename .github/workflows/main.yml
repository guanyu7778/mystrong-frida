name: strong

on: 
  workflow_dispatch:
  
jobs:
  check_version:
    runs-on: ubuntu-20.04
    
    outputs:
      FRIDA_VERSION: ${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}
      ALREADY_RELEASE: ${{ steps.checkReleaseVersion.outputs.ALREADY_RELEASE }}
    steps:
      - name: Pull Frida Latest Release
        id: pullFridaLatestRelease
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const releaseResponse = await github.repos.getLatestRelease({
              owner: 'frida',
              repo: 'frida',
            })
            const {
              data: { tag_name: ver }
            } = releaseResponse;
            core.setOutput('FRIDA_VERSION', ver);
      - name: Check release version
        id: checkReleaseVersion
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              const releaseVersion = '${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}'
              const releaseResponse = await github.repos.getReleaseByTag({
                owner: '${{ secrets.GIT_OWNER }}',
                repo: '${{ secrets.GIT_REPO }}',
                tag: releaseVersion
              });
              const {
                data: { tag_name: ver }
              } = releaseResponse;
              if (ver == '${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}'){
                  core.setOutput('ALREADY_RELEASE', '1');
              }
              else{
                  core.setOutput('ALREADY_RELEASE', '0');
              }
            } catch (e) {
              if(e.message == 'Not Found'){
                core.setOutput('ALREADY_RELEASE', '0');
              }
              else{
                core.setFailed(e.message);
              }
            }
     
     
  create_release:
    needs: check_version
    runs-on: ubuntu-20.04
    if: needs.check_version.outputs.ALREADY_RELEASE == '0'

    steps:
      - uses: actions/create-release@master
        id: createRelease
        name: Create Runner Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ needs.check_version.outputs.FRIDA_VERSION }}"
          release_name: "${{ needs.check_version.outputs.FRIDA_VERSION }}"
          prerelease: false

  android_build:
    runs-on: ubuntu-20.04
    needs: [check_version, create_release]

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: actions/setup-node@v2.1.4
      with:
        node-version: '10'
    
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: tester
      shell: bash
      run: |
        pwd
        ls
